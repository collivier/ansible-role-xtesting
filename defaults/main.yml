---
# general
prefix: /data
tmp_dir: /tmp
ipaddress: "{{ ansible_default_ipv4.address }}"
external_ipaddress: "{{ ipaddress }}"
project: xtesting
db_project: "{{ project }}"
use_slave:  # true if slaves are deployed
user_mail: root@localhost
use_proxy: false

# control if install software package and services
deploy_base_infra: false

# testcases
repo: opnfv
dport:  # 5000 if private registry
docker_tags:
# - latest:
#    branch: master
#    slave: lf-build2
docker_args:
  env: {}
  volumes: []
suites:
  - container: xtesting
    # privileged: false
    # network: bridge
    tests:
      - first
      - second
      - third
      - fourth
      - fifth
      - sixth
  - container: xtesting-mts
    # privileged: false
    # network: bridge
    tests:
      - seventh
triggers:
  - timed: '@daily'

# docker
docker_pull: false
docker_recreate: false
docker_restart_policy: always

# jenkins
jenkins_deploy: true
jenkins_port: 8080
jenkins_jnlp_port: 50000
jenkins_url: "http://{{ ipaddress }}:{{ jenkins_port }}"
jenkins_user: admin
jenkins_password: admin
jenkins_workspace: "{{ prefix }}/jenkins/workspace"
jenkins_configure: "{{ jenkins_deploy }}"
jenkins_create_jobs: "{{ jenkins_configure }}"
jenkins_wait: 30

# gitlab
gitlab_deploy: false
gitlab_port: 80
gitlab_url: http://{{ external_ipaddress }}:{{ gitlab_port }}
gitlab_configure: "{{ gitlab_deploy }}"
gitlab_create_jobs: "{{ gitlab_configure }}"
gitlab_clone_url: "http://xtesting:xtesting@{{ external_ipaddress }}:\
  {{ gitlab_port }}/xtesting/{{ project }}.git"
gitlab_wait: 240
gitlab_commit_msg: Update .gitlab-ci.yml via XtestingCI
gitlab_user_mail: "{{ user_mail }}"
gitlab_version: HEAD
gitlab_sharedrunner_deploy: "{{ gitlab_deploy }}"
gitlab_sharedrunner_concurrent: 10
gitlab_sharedrunner_image: alpine:latest
gitlab_privaterunner_deploy: "{{ gitlab_configure }}"
gitlab_privaterunner_concurrent: 10
gitlab_privaterunner_image: alpine:latest
gitlab_privaterunner_network_mode: bridge  # or host
gitlab_ci_mode: "overwrite"  # or insert
gitlab_use_artifacts: false
gitlab_use_chainedci: false

# s3
publish_to_s3: true
minio_deploy: true
minio_port: 9000
s3www_port: 8181
radosgw_deploy: false
radosgw_port: 8081
radosgw_wait: 120
nano_port: 5001
s3_dst_url: s3://xtesting
aws_access_key_id: xtesting
aws_secret_access_key: xtesting
bucket: xtesting
s3_mask_creds: false
s3_endpoint_url: http://{{ ipaddress }}:{{ minio_port }}
http_dst_url: http://{{ external_ipaddress }}:{{ s3www_port }}

# db
push_to_db: true
mongo_deploy: true
mongo_port: 27017
mongo_url: mongodb://{{ ipaddress }}:{{ mongo_port }}
mongo_wait: 1
node_name: '{{ project }}'

# testapi
testapi_deploy: true
testapi_configure: '{{ testapi_deploy }}'
testapi_port: 8000
testapi_url: http://{{ ipaddress }}:{{ testapi_port }}/api/v1
testapi_ext_url: http://{{ external_ipaddress }}:{{ testapi_port }}/api/v1
testapi_base_url: http://{{ external_ipaddress }}:{{ testapi_port }}
testapi_wait: 10

# postgres
postgres_deploy: true
postgres_port: 5432
postgres_host: '{{ ipaddress }}'
postgres_username: postgres
postgres_password: postgres
postgres_database: postgres
postgres_wait: 1

# cachet
cachet_deploy: true
cachet_configure: '{{ cachet_deploy }}'
cachet_wait: 30
cachet_port: 8001
cachet_appkey: base64:q/6JoobF1ztJeNkrthsC2eln62j/M6RRE585qyDTZ7I=
cachet_settings:
  - name: app_name
    value: '{{Â project }}'
  - name: app_domain
    value: http://{{ external_ipaddress }}:{{ cachet_port }}
  - name: app_timezone
    value: UTC
  - name: app_locale
    value: en
  - name: show_support
    value: 0
  - name: app_incident_days
    value: 7
cachet_user: xtesting
cachet_password: "{{ 'xtesting' | password_hash('sha512') }}"
cachet_user_mail: "{{ user_mail }}"
cachet_api_key: xtesting
cachet_remember_token: NONE
cachet_poll_timeout: 10
cachet_poll_frequency: 50
cachet_poll_extra_args:  # &installer={{ project }}

# registry
registry_deploy: true
registry_port: 5000

# influxdb
influxdb_deploy: false
influxdb_port: 8086
influxdb_url: http://{{ ipaddress }}:{{ influxdb_port }}
influxdb_wait: 1

# grafana
grafana_deploy: false
grafana_port: 3000
grafana_wait: 10

# elasticsearch
elasticsearch_deploy: false
elasticsearch_port: 9200
elasticsearch_transport_port: 9300
elasticsearch_url: http://{{ ipaddress }}:{{ elasticsearch_port }}
elasticsearch_wait: 1

# kibana
kibana_deploy: false
kibana_port: 5601
kibana_wait: 30

# fluentd
fluentd_deploy: false
fluentd_port: 24224
fluentd_wait: 30

# gating
gerrit:  # gerrit.opnfv.org
gerrit_project: functest-xtesting
builds:
  dependencies:
    - repo: _
      dport:  # 5000 if private registry
      container: alpine
      tag: '3.10'
  steps:
    - name: opnfv/xtesting
      containers:
        - name: xtesting
          ref_arg: BRANCH
          path: docker

# compatibilities
block_level_key: block-level
sudo1:  # sudo if sudo has to be called
