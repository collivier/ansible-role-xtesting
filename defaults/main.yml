---
# general
prefix: /data
tmp_dir: /tmp
become_tasks: true
ipaddress: "{{ ansible_default_ipv4.address }}"
external_ipaddress: "{{ ipaddress }}"
project: xtesting
db_project: "{{ project }}"
use_slave:  # true if slaves are deployed
user_mail: root@localhost

kubernetes_deploy: false
kubernetes_recreate: false
use_kubernetes: "{{ kubernetes_deploy }}"
use_node: "{{ use_kubernetes }}"

# testcases
repo: opnfv
dport:  # 5000 if private registry
docker_tags:
  - latest:
      branch: master
      dependency: '3.13'
      # slave: lf-build2
docker_args:
  env: {}
  volumes: []
  published_ports: []
suites:
  - container: xtesting
    # privileged: false
    # network: bridge
    # uid: 1000
    # gid: 1000
    tests:
      - first
      - second
      - third
      - fourth
      - fifth
      - sixth
  - container: xtesting-mts
    # privileged: false
    # network: bridge
    tests:
      - seventh
triggers:
  - timed: '@daily'

use_artifacts: false
use_artifacts_from:

# compatibilities
sudo1:  # sudo if sudo has to be called

properties:
  - build-blocker:
      # block-level: GLOBAL or NODE
      blocking-jobs:
        - "^{{ project }}-{% if jenkins_multijob %}({{ jenkins_multijob }}-)*{%
            endif %}{tag}-(daily|docker|review)$"

# job_properties:
#   kill-phase-on: FAILURE
#   abort-all-job: true

# docker
docker_pull: false
docker_recreate: false
docker_restart_policy: always
jenkins_docker_image: opnfv/xtesting-jenkins
jenkins_docker_tag: lts-slim
jenkins_k8s_image: jenkins/jenkins
jenkins_k8s_tag: lts-slim
jenkins_agent_docker_image: opnfv/xtesting-jenkins-agent
jenkins_agent_docker_tag: 3.36-buster
jenkins_agent_auto_docker_image: opnfv/xtesting-jenkins-agent-auto
jenkins_agent_auto_docker_tag: 3.36-buster
jenkins_agent_auto_container_name: "jenkins-agent"
gitlab_docker_image: gitlab/gitlab-ce
gitlab_docker_tag: 13.12.3-ce.0
nexus_docker_image: sonatype/nexus3
nexus_docker_tag: 3.30.0
influxdb_docker_image: influxdb
influxdb_docker_tag: 2.0.6-alpine
minio_docker_image: minio/minio
minio_docker_tag: RELEASE.2021-09-03T03-56-13Z
minio_s3www_docker_image: opnfv/xtesting-s3www
minio_s3www_docker_tag: v0.5.3
radosgw_docker_image: ceph/daemon
radosgw_docker_tag: latest
mongo_docker_image: mongo
mongo_docker_tag: 4.4
mongo_k8s_image: bitnami/mongodb
mongo_k8s_tag: 4.4.10-debian-10-r44
postgres_docker_image: postgres
postgres_docker_tag: 13-alpine
postgres_k8s_image: bitnami/postgresql
postgres_k8s_tag: 13.5.0
cachet_docker_image: cachethq/docker
cachet_docker_tag: latest
cachet_url_monitor_docker_image: mtakaki/cachet-url-monitor
cachet_url_monitor_docker_tag: release-0.6.10
elasticsearch_docker_image: docker.elastic.co/elasticsearch/elasticsearch-oss
elasticsearch_docker_tag: 7.10.2
elasticsearch_k8s_image: "{{ elasticsearch_docker_image }}"
elasticsearch_k8s_tag: "{{ elasticsearch_docker_tag }}"
kibana_docker_image: docker.elastic.co/kibana/kibana-oss
kibana_docker_tag: 7.9.3
kibana_k8s_image: "{{ kibana_docker_image }}"
kibana_k8s_tag: "{{ kibana_docker_tag }}"
fluentd_docker_image: fluent/fluentd
fluentd_docker_tag: v1.11-1
gitea_docker_image: gitea/gitea
gitea_docker_tag: 1.13.2
grafana_docker_image: grafana/grafana
grafana_docker_tag: 8.5.2
registry_docker_image: registry
registry_docker_tag: 2
testapi_docker_image: opnfv/testapi
testapi_docker_tag: kali
vault_docker_image: vault
vault_docker_tag: 1.10.3

# jenkins
jenkins_deploy: true
jenkins_port: 8080
jenkins_jnlp_port: 50000
jenkins_url: "http://{{ ipaddress }}:{{ jenkins_port }}"
jenkins_user: admin
jenkins_password: admin
jenkins_workspace: "{{ prefix }}/jenkins/workspace"
jenkins_configure: "{{ jenkins_deploy }}"
jenkins_create_jobs: "{{ jenkins_configure }}"
jenkins_wait: 120
jenkins_network_mode: bridge  # or host
jenkins_agent_deploy: false
jenkins_agent_network_mode: bridge  # or host
jenkins_agent_name: xtesting
jenkins_multijob:  # any project suffix
jenkins_view_daily_regex: ^{{ project }}-[a-z0-9.{% if jenkins_multijob %}-{%
  endif %}]+-daily$
jenkins_view_review_regex: ^{{ project }}-[a-z0-9.]+-review$
jenkins_view_tox_regex: ^{{ project }}-[a-z0-9.]+-tox$
jenkins_view_docker_regex: ^{{ project }}-[a-z0-9.]+-docker$
jenkins_view_trivy_regex: ^{{ project }}-[a-z0-9-.]+-trivy$
jenkins_view_grype_regex: ^{{ project }}-[a-z0-9.]+-grype$
jenkins_pollscm: "*/30 * * * *"
jenkins_publishers:
  # - email-ext:
  #     recipients: {{ user_mail }}
  #     failure: false
  #     first-failure: true
  #     fixed: true
jenkins_wrappers:
  # - timeout:
  #     timeout: 90
  #     fail: true
  #     type: absolute

# gitlab
gitlab_deploy: false
gitlab_port: 80
gitlab_shell_port: 32022
gitlab_url: http://{{ ipaddress }}:{{ gitlab_port }}
gitlab_configure: "{{ gitlab_deploy }}"
gitlab_create_jobs: "{{ gitlab_configure }}"
gitlab_clone_url: "http://xtesting:xtesting@{{ ipaddress }}:\
  {{ gitlab_port }}/xtesting/{{ project }}.git"
gitlab_wait: 300
gitlab_commit_msg: Update .gitlab-ci.yml via XtestingCI
gitlab_user_mail: "{{ user_mail }}"
gitlab_version: HEAD
gitlab_sharedrunner_deploy: "{{ gitlab_deploy }}"
gitlab_sharedrunner_concurrent: 10
gitlab_sharedrunner_image: alpine:latest
gitlab_privaterunner_deploy: false
gitlab_privaterunner_concurrent: 10
gitlab_privaterunner_image: alpine:latest
gitlab_privaterunner_network_mode: bridge  # or host
gitlab_ci_mode: "overwrite"  # or insert
gitlab_use_chainedci: false

# s3
publish_to_s3: true
minio_deploy: true
minio_port: 9000
minio_console_port: 9001
s3www_port: 8181
radosgw_deploy: false
radosgw_port: 8081
radosgw_wait: 120
nano_port: 5001
s3_dst_url: s3://xtesting
aws_access_key_id: xtesting
aws_secret_access_key: xtesting
bucket: xtesting
s3_mask_creds: false
boto: "{{ prefix }}/boto"
s3_endpoint_url: http://{{ ipaddress }}:{{ minio_port }}
http_dst_url: http://{{ external_ipaddress }}:{{ s3www_port }}

# db
push_to_db: true
mongo_deploy: true
mongo_port: 27017
mongo_url: mongodb://{{ ipaddress }}:{{ mongo_port }}
mongo_wait: 1
node_name: '{{ project }}'

# testapi
testapi_deploy: true
testapi_configure: '{{ testapi_deploy }}'
testapi_port: 8000
testapi_url: http://{{ ipaddress }}:{{ testapi_port }}/api/v1
testapi_deploy_url: "{{ testapi_url }}"
testapi_ext_url: http://{{ external_ipaddress }}:{{ testapi_port }}/api/v1
testapi_base_url: http://{{ external_ipaddress }}:{{ testapi_port }}
testapi_wait: 30

# postgres
postgres_deploy: true
postgres_port: 5432
postgres_host: '{{ ipaddress }}'
postgres_username: postgres
postgres_password: postgres
postgres_database: postgres
postgres_wait: 30

# cachet
cachet_deploy: true
cachet_configure: '{{ cachet_deploy }}'
cachet_wait: 30
cachet_port: 8001
cachet_url: 'http://{{ ipaddress }}:{{ cachet_port }}/api/v1'
cachet_appkey: base64:q/6JoobF1ztJeNkrthsC2eln62j/M6RRE585qyDTZ7I=
cachet_settings:
  - name: app_name
    value: '{{Â project }}'
  - name: app_domain
    value: http://{{ external_ipaddress }}:{{ cachet_port }}
  - name: app_timezone
    value: UTC
  - name: app_locale
    value: en
  - name: show_support
    value: 0
  - name: app_incident_days
    value: 7
cachet_user: xtesting
cachet_password: "{{ 'xtesting' | password_hash('sha512') }}"
cachet_user_mail: "{{ user_mail }}"
cachet_api_key: xtesting
cachet_remember_token: NONE
cachet_poll_timeout: 10
cachet_poll_frequency: 50
cachet_poll_extra_args:  # &installer={{ project }}

# registry
registry_deploy: false
registry_port: 5000

# influxdb
influxdb_deploy: false
influxdb_port: 8086
influxdb_url: http://{{ ipaddress }}:{{ influxdb_port }}
influxdb_wait: 30
influxdb_username: admin
influxdb_password: admin123

# grafana
grafana_deploy: false
grafana_port: 3000
grafana_wait: 30
grafana_username: admin
grafana_password: admin  # unused if deployed in Kubernetes
grafana_url: http://{{ ipaddress }}:{{ grafana_port }}

# elasticsearch
elasticsearch_deploy: false
elasticsearch_port: 9200
elasticsearch_url: http://{{ ipaddress }}:{{ elasticsearch_port }}
elasticsearch_wait: 1

# kibana
kibana_deploy: false
kibana_port: 5601
kibana_wait: 30

# fluentd
fluentd_deploy: false
fluentd_port: 24224
fluentd_wait: 30

# gitea
gitea_deploy: false
gitea_port: 3001
gitea_ssh_port: 222
gitea_url: http://{{ ipaddress }}:{{ gitea_port }}
gitea_wait: 20

# vault
vault_deploy: false
vault_port: 8200
vault_wait: 1

# nexus
nexus_deploy: false
nexus_port: 8082
nexus_url: http://{{ ipaddress }}:{{ nexus_port }}
nexus_wait: 240

# gating
build_only: false
use_gerrit: false
gerrit_project: functest-xtesting
git_url:  # https://gerrit.opnfv.org/gerrit/{{ gerrit_project }}
builds:
  dependency:
    repo: _
    dport:  # 5000 if private registry
    container: alpine
  steps:
    - name: opnfv/xtesting
      containers:
        - name: xtesting
          ref_arg: BRANCH
          path: docker/core
    - name: opnfv/xtesting-mts
      containers:
        - name: xtesting-mts
          ref_arg: BRANCH
          path: docker/mts

# Debian (opnfv/xtesting-jenkins:lts-slim)
install_trivy_deps: |
  apt-get -o DPkg::Lock::Timeout=300 update && \
  DEBIAN_FRONTEND=noninteractive apt-get -o DPkg::Lock::Timeout=300 install \
    curl -y
install_grype_deps: |
  apt-get -o DPkg::Lock::Timeout=300 update && \
  DEBIAN_FRONTEND=noninteractive apt-get -o DPkg::Lock::Timeout=300 install \
    curl -y
install_tox_deps: |
  apt-get -o DPkg::Lock::Timeout=300 update && \
  DEBIAN_FRONTEND=noninteractive apt-get -o DPkg::Lock::Timeout=300 \
    dist-upgrade -y && \
  DEBIAN_FRONTEND=noninteractive apt-get -o DPkg::Lock::Timeout=300 install \
    wget python3-pip tox -y && \
  wget -O- \
    https://people.debian.org/~paravoid/python-all/unofficial-python-all.asc \
      | apt-key add - && \
  echo "deb http://people.debian.org/~paravoid/python-all buster main" \
    | tee /etc/apt/sources.list.d/python-all.list && \
  apt-get -o DPkg::Lock::Timeout=300 update && \
  DEBIAN_FRONTEND=noninteractive apt-get -o DPkg::Lock::Timeout=300 install \
    python3.8 python3.8-dev -y && \
  pip3 install tox-pip-version

# Alpine (opnfv/xtesting-jenkins:lts-alpine)
# install_trivy_deps: apk add --update curl
# install_grype_deps: apk add --update curl
# install_tox_deps: |
#   apk add --update build-base libxml2-dev libxslt-dev libffi-dev \
#     openssl-dev libjpeg-turbo-dev rust cargo python3 python3-dev \
#     py3-pip py3-wheel py3-tox && \
#   pip3 install tox-pip-version
