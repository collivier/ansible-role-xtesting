---
- name: Checking Alpine version
  ansible.builtin.fail:
    msg: Only Alpine 3.18 and newer are supported
  when:
    - "ansible_distribution_version is version('3.18.0', 'lt', version_type='pep440')"
- name: Setting break-system-packages in pip args
  ansible.builtin.set_fact:
    pip_extra_args: "{{ ' '.join((pip_extra_args, '--break-system-packages')) }}"
  when:
    - "ansible_distribution_version is version('3.19.0', 'ge', version_type='pep440')"
- name: Gathering the package facts
  ansible.builtin.package_facts:
    manager: auto
- name: Installing py3-pip, py3-requests and py3-setuptools
  become: true
  community.general.apk:
    name:
      - py3-pip
      - py3-requests
      - py3-setuptools
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - not lookup('env', 'VIRTUAL_ENV')
- name: Installing docker
  become: true
  community.general.apk:
    name:
      - docker
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - not (use_podman and not kubernetes_deploy)
- name: Installing podman
  become: true
  community.general.apk:
    name:
      - podman
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - use_podman
- name: Installing fuse-overlayfs
  become: true
  community.general.apk:
    name:
      - fuse-overlayfs
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Checking /etc/containers/storage.conf exists
  ansible.builtin.stat:
    path: '/etc/containers/storage.conf'
  register: stat_result
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Patching /etc/containers/storage.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/containers/storage.conf'
    regexp: '^.*mount_program.*=.*$'
    line: 'mount_program = "/usr/bin/fuse-overlayfs"'
  when:
    - use_podman
    - ansible_module_running_in_container
    - stat_result.stat.exists
- name: Patching /etc/containers/containers.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/containers/containers.conf'
    regexp: '^.*remote.*=.*$'
    line: 'remote = true'
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Installing py3-certifi, py3-charset-normalizer, py3-fasteners,
    py3-pbr, py3-six and py3-urllib3
  become: true
  community.general.apk:
    name:
      - py3-certifi
      - py3-charset-normalizer
      - py3-fasteners
      - py3-pbr
      - py3-six
      - py3-urllib3
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - jenkins_deploy or jenkins_configure or jenkins_create_jobs
- name: Installing py3-multi-key-dict
  become: true
  community.general.apk:
    name:
      - py3-multi-key-dict
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - jenkins_deploy or jenkins_configure or jenkins_create_jobs
    - "ansible_distribution_version is version('3.19.0', 'lt', version_type='pep440')"
- name: Installing multi-key-dict via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - multi-key-dict<=2.0.3
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - "ansible_distribution_version is version('3.19.0', 'ge', version_type='pep440')"
- name: Installing stevedore, python-jenkins and jenkins-job-builder via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - stevedore<=5.4.1
      - python-jenkins<=1.8.2
      - jenkins-job-builder<=6.4.2
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing py3-jmespath
  become: true
  community.general.apk:
    name: py3-jmespath
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - gitlab_deploy or gitlab_configure
- name: Installing git
  become: true
  community.general.apk:
    name: git
    update_cache: true
  register: apt_res
  retries: 5
  until: apk_res is success
  when:
    - gitlab_create_jobs
- name: Installing py3-psycopg2
  become: true
  community.general.apk:
    name: py3-psycopg2
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - postgres_deploy or cachet_configure
- name: Installing py3-passlib
  become: true
  community.general.apk:
    name: py3-passlib
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - cachet_deploy or cachet_configure
- name: Installing py3-influxdb
  become: true
  community.general.apk:
    name: py3-influxdb
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - influxdb_deploy
- name: Installing curl
  become: true
  community.general.apk:
    name: curl
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - kubernetes_deploy
- name: Installing kind
  become: true
  ansible.builtin.uri:
    url: https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64
    dest: /usr/local/bin/kind
    mode: '0755'
    status_code:
      - 200
      - 304
  when:
    - kubernetes_deploy
- name: Installing py3-kubernetes
  become: true
  community.general.apk:
    name: py3-kubernetes
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - use_kubernetes
- name: Installing py3-boto3, py3-gitpython, py3-grpcio, py3-protobuf,
    py3-s3transfer, py3-smmap2, py3-oauthlib, py3-ruamel.yaml and
    py3-ruamel.yaml.clib
  become: true
  community.general.apk:
    name:
      - py3-boto3
      - py3-gitpython
      - py3-grpcio
      - py3-protobuf
      - py3-s3transfer
      - py3-smmap2
      - py3-oauthlib
      - py3-ruamel.yaml
      - py3-ruamel.yaml.clib
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - use_kubernetes
- name: Installing python-string-utils, supermutes, pyhelm and openshift
    via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - python-string-utils<=1.0.0
      - supermutes<=0.2.5
      - pyhelm<=2.14.5
      - openshift<=0.12.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
- name: Installing tar
  become: true
  community.general.apk:
    name:
      - tar
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - use_kubernetes
- name: Installing p3-cryptography and openssl
  become: true
  community.general.apk:
    name:
      - py3-cryptography
      - openssl
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - nginx_deploy
- name: Installing coreutils
  become: true
  community.general.apk:
    name:
      - coreutils
    update_cache: true
  register: apk_res
  retries: 5
  until: apk_res is success
  when:
    - grafana_deploy
    - use_kubernetes
