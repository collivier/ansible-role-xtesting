---
- name: Installing python3-dnf
  become: true
  ansible.builtin.shell:
    cmd: yum install python3-dnf -y
  tags:
    - skip_ansible_lint
  when:
    - ansible_distribution_major_version | int >= 8
- name: Setting yum use_backend to auto
  ansible.builtin.set_fact:
    yum_use_backend: auto
- name: Enabling EPEL release
  become: true
  ansible.builtin.yum:
    name: epel-release
    enablerepo: "*extras*"
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
- name: Installing yum-utils and iproute
  become: true
  ansible.builtin.yum:
    name:
      - yum-utils
      - iproute
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
- name: Collecting facts
  ansible.builtin.setup:
- name: Installing python3.12-jinja2
  become: true
  ansible.builtin.yum:
    name:
      - python3.12-jinja2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-jinja2
  become: true
  ansible.builtin.yum:
    name:
      - python3-jinja2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing python3.12-pip
  become: true
  ansible.builtin.yum:
    name: python3.12-pip
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-pip
  become: true
  ansible.builtin.yum:
    name: python3-pip
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing packaging via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: packaging
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Populating service ansible_facts
  ansible.builtin.service_facts:
  when:
    - not ansible_module_running_in_container
- name: Disabling firewalld
  become: true
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
  when:
    - not ansible_module_running_in_container
    - ansible_facts.services['firewalld'] is defined
- name: Installing iptables
  become: true
  ansible.builtin.yum:
    name: iptables
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 8
- name: Adding Docker CE repository
  become: true
  changed_when: true
  ansible.builtin.shell: |
    yum-config-manager \
      --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  when:
    - not (use_podman and not kubernetes_deploy)
- name: Installing docker-ce
  become: true
  ansible.builtin.yum:
    name: docker-ce
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - not (use_podman and not kubernetes_deploy)
- name: Installing podman
  become: true
  ansible.builtin.yum:
    name: podman
    enablerepo: "*extras*"
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - use_podman
- name: Installing libselinux-python3
  become: true
  ansible.builtin.yum:
    name:
      - libselinux-python3
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_facts.selinux.status != 'disabled'
- name: Changing state of selinux
  become: true
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  when:
    - ansible_facts.selinux.status != 'disabled'
- name: Installing websocket-client via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: websocket-client
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-websocket-client
  become: true
  ansible.builtin.yum:
    name:
      - python3-websocket-client
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing python3.12-requests
  become: true
  ansible.builtin.yum:
    name:
      - python3.12-requests
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-requests
  become: true
  ansible.builtin.yum:
    name:
      - python3-requests
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing docker via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: docker
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-docker
  become: true
  ansible.builtin.yum:
    name:
      - python3-docker
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing importlib-metadata and fasteners via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - importlib-metadata
      - fasteners
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-importlib-metadata and python3-fasteners
  become: true
  ansible.builtin.yum:
    name:
      - python3-importlib-metadata
      - python3-fasteners
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing pbr and six via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pbr
      - six
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-pbr and python3-six
  become: true
  ansible.builtin.yum:
    name:
      - python3-pbr
      - python3-six
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing multi_key_dict via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: multi_key_dict
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing stevedore via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: stevedore
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-stevedore
  become: true
  ansible.builtin.yum:
    name:
      - python3-stevedore
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing python-jenkins via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: python-jenkins
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing jenkins-job-builder via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: jenkins-job-builder
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing python3.12-jmespath
  become: true
  ansible.builtin.yum:
    name: python3.12-jmespath
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-jmespath
  become: true
  ansible.builtin.yum:
    name: python3-jmespath
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing git
  become: true
  ansible.builtin.yum:
    name: git
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_create_jobs
- name: Installing python3.12-psycopg2
  become: true
  ansible.builtin.yum:
    name: python3.12-psycopg2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - postgres_deploy or cachet_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-psycopg2
  become: true
  ansible.builtin.yum:
    name: python3-psycopg2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - postgres_deploy or cachet_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing passlib via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: passlib
    extra_args: '{{ pip_extra_args }}'
  when:
    - cachet_deploy or cachet_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-passlib
  become: true
  ansible.builtin.yum:
    name: python3-passlib
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - cachet_deploy or cachet_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing msgpack via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: msgpack
    extra_args: '{{ pip_extra_args }}'
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-msgpack
  become: true
  ansible.builtin.yum:
    name: python3-msgpack
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int >= 9
- name: Installing influxdb via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: influxdb<=5.3.1
    extra_args: '{{ pip_extra_args }}'
  when:
    - influxdb_deploy
- name: Installing certifi via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: certifi
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-certifi
  become: true
  ansible.builtin.yum:
    name:
      - python3-certifi
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int >= 9
- name: Installing cachetools, oauthlib, requests-oauthlib,
    google-auth, python-dateutil and kubernetes via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - cachetools<=4.2.4
      - oauthlib<=3.2.2
      - requests-oauthlib<=1.3.1
      - google-auth<=2.16.0
      - python-dateutil<=2.8.2
      - kubernetes<=25.3.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-cachetools, python3-oauthlib,
    python3-requests-oauthlib and python3-kubernetes
  become: true
  ansible.builtin.yum:
    name:
      - python3-cachetools
      - python3-oauthlib
      - python3-requests-oauthlib
      - python3-google-auth
      - python3-kubernetes
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int >= 9
- name: Installing pyhelm and openshift via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pyhelm<=2.14.5
      - openshift<=0.12.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
- name: Installing openssl
  become: true
  ansible.builtin.yum:
    name:
      - openssl
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - nginx_deploy
- name: Installing cryptography via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: cryptography
    extra_args: '{{ pip_extra_args }}'
  when:
    - nginx_deploy
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-cryptography
  become: true
  ansible.builtin.yum:
    name:
      - python3-cryptography
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - nginx_deploy
    - ansible_distribution_major_version | int >= 9