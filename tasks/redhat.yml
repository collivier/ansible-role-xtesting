---
- name: Checking python version
  ansible.builtin.fail:
    msg: Please set ansible_python_interpreter=/usr/bin/python3.6 in playbook
  when:
    - ansible_python.version.major==3
    - ansible_python.version.minor==6
    - ansible_distribution_major_version | int == 8
- name: Checking python version
  ansible.builtin.fail:
    msg: Please set ansible_python_interpreter=/usr/bin/python3.9 in playbook
  when:
    - ansible_python.version.major==3
    - ansible_python.version.minor==9
    - ansible_distribution_major_version | int == 9
- name: Checking python version
  ansible.builtin.fail:
    msg: RedHat8 and newer only support py3
  when:
    - ansible_python.version.major==2
    - ansible_distribution_major_version | int >= 8
- name: Installing python-dnf
  become: true
  ansible.builtin.shell:
    cmd: yum install --enablerepo=*extras* python-dnf -y
  tags:
    - skip_ansible_lint
  when:
    - ansible_python.version.major==2
- name: Installing python3-dnf
  become: true
  ansible.builtin.shell:
    cmd: yum install python3-dnf -y
  tags:
    - skip_ansible_lint
  when:
    - ansible_python.version.major==3
- name: Checking if epel-release exists
  become: true
  ansible.builtin.yum:
    list: epel-release
  register: result
- name: Enabling EPEL release
  become: true
  ansible.builtin.yum:
    name: epel-release
    enablerepo: "*extras*"
  when:
    - result.results | length > 0
- name: Enabling EPEL release
  become: true
  ansible.builtin.yum:
    name: https://dl.fedoraproject.org/pub/epel/epel-release-latest-{{
      ansible_distribution_major_version }}.noarch.rpm
    update_cache: true
  when:
    - result.results | length == 0
- name: Installing python-pip
  become: true
  ansible.builtin.yum:
    name: python-pip
    update_cache: true
  when:
    - ansible_python.version.major==2
- name: Installing python3-pip
  become: true
  ansible.builtin.yum:
    name: python3-pip
    update_cache: true
  when:
    - ansible_python.version.major==3
- name: Populating service ansible_facts
  ansible.builtin.service_facts:
- name: Disabling firewalld
  become: true
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
  when: ansible_facts.services['firewalld'] is defined
- name: Installing iptables
  become: true
  ansible.builtin.yum:
    name: iptables
    update_cache: true
  when:
    - ansible_distribution_major_version | int >= 8
- name: Adding Docker CE repository
  become: true
  changed_when: true
  ansible.builtin.shell: |
    yum-config-manager \
      --add-repo https://download.docker.com/linux/centos/docker-ce.repo
  when:
    - not (ansible_distribution == "RedHat" and
        ansible_distribution_major_version | int == 7)
- name: Installing docker-ce
  become: true
  ansible.builtin.yum:
    name: docker-ce
    update_cache: true
  when:
    - not (ansible_distribution == "RedHat" and
        ansible_distribution_major_version | int == 7)
- name: Installing docker
  become: true
  ansible.builtin.yum:
    name: docker
    enablerepo: "*extras*"
    update_cache: true
  when:
    - ansible_distribution == "RedHat"
    - ansible_distribution_major_version | int == 7
- name: Changing state of selinux
  become: true
  ansible.posix.selinux:
    policy: targeted
    state: permissive
- name: Installing python-websocket-client and python-requests
  become: true
  ansible.builtin.yum:
    name:
      - python-websocket-client
      - python-requests
    update_cache: true
  when:
    - ansible_python.version.major==2
    - ansible_distribution_major_version | int < 8
- name: Installing python3-websocket-client
  become: true
  ansible.builtin.yum:
    name: python3-websocket-client
    update_cache: true
  when:
    - ansible_python.version.major==3
    - ansible_distribution_major_version | int < 8
- name: Installing docker via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: docker<=4.4.4
    extra_args: --no-deps
  when:
    - ansible_distribution_major_version | int < 8
- name: python3-docker
  become: true
  ansible.builtin.yum:
    name:
      - python3-docker
    update_cache: true
  when:
    - ansible_python.version.major==3
    - ansible_distribution_major_version | int >= 8
- name: Installing python-pbr, python-fasteners and python2-multi_key_dict
  become: true
  ansible.builtin.yum:
    name:
      - python-pbr
      - python-fasteners
      - python2-multi_key_dict
    update_cache: true
  when:
    - ansible_python.version.major==2
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 7
- name: Installing python-jenkins via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: python-jenkins<=1.7.0
    extra_args: --no-deps
  when:
    - jenkins_deploy or jenkins_configure
    - not ansible_distribution_major_version | int == 8
- name: Installing python3-importlib-metadata, python3-pbr and
    python3-fasteners
  become: true
  ansible.builtin.yum:
    name:
      - python3-importlib-metadata
      - python3-pbr
      - python3-fasteners
    update_cache: true
  when:
    - ansible_python.version.major==3
    - jenkins_deploy or jenkins_configure
    - not ansible_distribution_major_version | int == 8
- name: Installing multi_key_dict via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: multi_key_dict<=2.0.3
    extra_args: --no-deps
  when:
    - ansible_python.version.major==3
    - jenkins_deploy or jenkins_configure
    - not ansible_distribution_major_version | int == 8
- name: Installing python3-jenkins
  become: true
  ansible.builtin.yum:
    name:
      - python3-jenkins
    update_cache: true
  when:
    - ansible_python.version.major==3
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int == 8
- name: Installing stevedore via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: stevedore<=1.31.0
    extra_args: --no-deps
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 7
- name: Installing python3-stevedore
  become: true
  ansible.builtin.yum:
    name:
      - python3-stevedore
    update_cache: true
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 8
- name: Installing six via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: six>=1.10.0
    extra_args: --no-deps -U
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 7
- name: Installing jenkins-job-builder via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: jenkins-job-builder<=3.8.0
    extra_args: --no-deps
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing python-jmespath
  become: true
  ansible.builtin.yum:
    name: python-jmespath
    update_cache: true
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_python.version.major==2
- name: Installing python3-jmespath
  become: true
  ansible.builtin.yum:
    name: python3-jmespath
    update_cache: true
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_python.version.major==3
- name: Installing git
  become: true
  ansible.builtin.yum:
    name: git
    update_cache: true
  when:
    - gitlab_create_jobs
- name: Installing python-psycopg2
  become: true
  ansible.builtin.yum:
    name: python-psycopg2
    update_cache: true
  when:
    - postgres_deploy or cachet_configure
    - ansible_python.version.major==2
- name: Installing python3-psycopg2
  become: true
  ansible.builtin.yum:
    name: python3-psycopg2
    update_cache: true
  when:
    - postgres_deploy or cachet_configure
    - ansible_python.version.major==3
- name: Installing pytz and python-dateutil
  become: true
  ansible.builtin.yum:
    name:
      - pytz
      - python-dateutil
    update_cache: true
  when:
    - influxdb_deploy
    - ansible_python.version.major==2
- name: Installing python3-msgpack
  become: true
  ansible.builtin.yum:
    name: python3-msgpack
    update_cache: true
  when:
    - influxdb_deploy
    - ansible_python.version.major==3
- name: Installing influxdb<=4.0.0 via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: influxdb<=4.0.0
    extra_args: --no-deps
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int <= 7
- name: Installing influxdb<=5.3.1 via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: influxdb<=5.3.1
    extra_args: --no-deps
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int >= 8
- name: Installing python-certifi, python-cachetools, python-oauthlib,
    python-requests-oauthlib and python2-kubernetes
  become: true
  ansible.builtin.yum:
    name:
      - python-certifi
      - python-cachetools
      - python-oauthlib
      - python-requests-oauthlib
      - python-google-auth
      - python2-kubernetes
    update_cache: true
  when:
    - use_kubernetes
    - ansible_python.version.major==2
- name: Installing python3-certifi, python3-cachetools, python3-oauthlib,
    python3-requests-oauthlib and python3-kubernetes
  become: true
  ansible.builtin.yum:
    name:
      - python3-certifi
      - python3-cachetools
      - python3-oauthlib
      - python3-requests-oauthlib
      - python3-google-auth
      - python3-kubernetes
    update_cache: true
  when:
    - use_kubernetes
    - ansible_python.version.major==3
- name: Installing setuptools via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - setuptools<=39.2.0
    extra_args: --no-deps -U
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int <= 7
- name: Installing pyhelm and openshift via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pyhelm<=2.14.5
      - openshift<=0.12.0
    extra_args: --no-deps
  when:
    - use_kubernetes