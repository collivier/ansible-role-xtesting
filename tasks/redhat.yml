---
- name: Installing python3-dnf
  become: true
  ansible.builtin.shell:
    cmd: yum install python3-dnf -y
  tags:
    - skip_ansible_lint
  when:
    - ansible_distribution_major_version | int >= 8
- name: Setting yum use_backend to auto
  ansible.builtin.set_fact:
    yum_use_backend: auto
- name: Enabling EPEL release
  become: true
  ansible.builtin.yum:
    name: epel-release
    enablerepo: "*extras*"
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
- name: Installing yum-utils and iproute
  become: true
  ansible.builtin.yum:
    name:
      - yum-utils
      - iproute
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
- name: Collecting facts
  ansible.builtin.setup:
- name: Installing python3.12-jinja2
  become: true
  ansible.builtin.yum:
    name:
      - python3.12-jinja2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-jinja2
  become: true
  ansible.builtin.yum:
    name:
      - python3-jinja2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing python3.12-pip, python3.12-setuptools and python3.12-wheel
  become: true
  ansible.builtin.yum:
    name:
      - python3.12-pip
      - python3.12-setuptools
      - python3.12-wheel
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-pip and python3-setuptools
  become: true
  ansible.builtin.yum:
    name:
      - python3-pip
      - python3-setuptools
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing python3-wheel
  become: true
  ansible.builtin.yum:
    name:
      - python3-wheel
    enablerepo: crb
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing packaging via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: packaging<=24.2
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Populating service ansible_facts
  ansible.builtin.service_facts:
  when:
    - not ansible_module_running_in_container
- name: Disabling firewalld
  become: true
  ansible.builtin.systemd:
    name: firewalld
    state: stopped
  when:
    - not ansible_module_running_in_container
    - ansible_facts.services['firewalld'] is defined
- name: Installing iptables
  become: true
  ansible.builtin.yum:
    name: iptables
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 8
- name: Adding Docker CE repository
  become: true
  changed_when: true
  ansible.builtin.shell: |
    yum-config-manager \
      --add-repo https://download.docker.com/linux/rhel/docker-ce.repo
  when:
    - not (use_podman and not kubernetes_deploy)
- name: Installing docker-ce
  become: true
  ansible.builtin.yum:
    name: docker-ce
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - not (use_podman and not kubernetes_deploy)
- name: Installing podman
  become: true
  ansible.builtin.yum:
    name: podman
    enablerepo: "*extras*"
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - use_podman
- name: Installing fuse-overlayfs
  become: true
  ansible.builtin.yum:
    name: fuse-overlayfs
    enablerepo: "*extras*"
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Checking /etc/containers/storage.conf exists
  ansible.builtin.stat:
    path: '/etc/containers/storage.conf'
  register: stat_result
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Patching /etc/containers/storage.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/etc/containers/storage.conf'
    regexp: '^.*mount_program.*=.*$'
    line: 'mount_program = "/usr/bin/fuse-overlayfs"'
  when:
    - use_podman
    - ansible_module_running_in_container
    - stat_result.stat.exists
- name: Patching /usr/share/containers/containers.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/usr/share/containers/containers.conf'
    regexp: '^.*remote.*=.*$'
    line: 'remote = true'
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Installing libselinux-python3
  become: true
  ansible.builtin.yum:
    name:
      - libselinux-python3
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_facts.selinux.status != 'disabled'
- name: Changing state of selinux
  become: true
  ansible.posix.selinux:
    policy: targeted
    state: permissive
  when:
    - ansible_facts.selinux.status != 'disabled'
- name: Installing websocket-client via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: websocket-client<=1.8.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-websocket-client
  become: true
  ansible.builtin.yum:
    name:
      - python3-websocket-client
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing python3.12-requests
  become: true
  ansible.builtin.yum:
    name:
      - python3.12-requests
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-requests
  become: true
  ansible.builtin.yum:
    name:
      - python3-requests
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing docker via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: docker<=7.1.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-docker
  become: true
  ansible.builtin.yum:
    name:
      - python3-docker
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - ansible_distribution_major_version | int >= 9
- name: Installing importlib-metadata, fasteners and zipp via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - fasteners<=0.19
      - importlib-metadata<=8.6.1
      - zipp<=3.21.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-importlib-metadata, python3-fasteners and python3-zipp
  become: true
  ansible.builtin.yum:
    name:
      - python3-importlib-metadata
      - python3-fasteners
      - python3-zipp
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing pbr and six via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pbr<=6.1.1
      - six<=1.17.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-pbr and python3-six
  become: true
  ansible.builtin.yum:
    name:
      - python3-pbr
      - python3-six
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing multi_key_dict via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: multi_key_dict<=2.0.3
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing stevedore via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: stevedore<=5.4.1
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-stevedore
  become: true
  ansible.builtin.yum:
    name:
      - python3-stevedore
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - jenkins_deploy or jenkins_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing python-jenkins and jenkins-job-builder via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - python-jenkins<=1.8.2
      - jenkins-job-builder<=6.4.2
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure
- name: Installing python3.12-jmespath
  become: true
  ansible.builtin.yum:
    name: python3.12-jmespath
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-jmespath
  become: true
  ansible.builtin.yum:
    name: python3-jmespath
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_deploy or gitlab_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing git
  become: true
  ansible.builtin.yum:
    name: git
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - gitlab_create_jobs
- name: Installing python3.12-psycopg2
  become: true
  ansible.builtin.yum:
    name: python3.12-psycopg2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - postgres_deploy or cachet_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-psycopg2
  become: true
  ansible.builtin.yum:
    name: python3-psycopg2
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - postgres_deploy or cachet_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing passlib via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: passlib<=1.7.4
    extra_args: '{{ pip_extra_args }}'
  when:
    - cachet_deploy or cachet_configure
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-passlib
  become: true
  ansible.builtin.yum:
    name: python3-passlib
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - cachet_deploy or cachet_configure
    - ansible_distribution_major_version | int >= 9
- name: Installing msgpack via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: msgpack<=1.1.0
    extra_args: '{{ pip_extra_args }}'
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-msgpack
  become: true
  ansible.builtin.yum:
    name: python3-msgpack
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - influxdb_deploy
    - ansible_distribution_major_version | int >= 9
- name: Installing influxdb, python-dateutil and pytz via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - influxdb<=5.3.2
      - python-dateutil<=2.9.0.post0
      - pytz<=2025.1
    extra_args: '{{ pip_extra_args }}'
  when:
    - influxdb_deploy
- name: Installing curl
  become: true
  ansible.builtin.yum:
    name: curl
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - kubernetes_deploy
- name: Installing kind
  become: true
  ansible.builtin.uri:
    url: https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64
    dest: /usr/local/bin/kind
    mode: '0755'
    status_code:
      - 200
      - 304
  when:
    - kubernetes_deploy
- name: Installing certifi via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: certifi<=2025.1.31
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-certifi
  become: true
  ansible.builtin.yum:
    name:
      - python3-certifi
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int >= 9
- name: Installing cachetools, durationpy, oauthlib,
    requests-oauthlib, pyasn1, pyasn1-modules, rsa,
    google-auth, python-dateutil and kubernetes via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - cachetools<=5.5.2
      - durationpy<=0.9
      - google-auth<2.38.0
      - kubernetes<=32.0.1
      - oauthlib<=3.2.2
      - pyasn1<=0.6.1
      - pyasn1-modules<=0.4.1
      - python-dateutil<=2.9.0.post0
      - requests-oauthlib<=2.0.0
      - rsa<=4.9
      - six<=1.17.0
    #extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-cachetools, python3-jsonpatch, python3-oauthlib,
    python3-asn1, python3-pyasn1-modules, python3-rsa,
    python3-requests-oauthlib and python3-kubernetes
  become: true
  ansible.builtin.yum:
    name:
      - python3-asn1
      - python3-pyasn1-modules
      - python3-cachetools
      - python3-oauthlib
      - python3-requests-oauthlib
      - python3-google-auth
      - python3-kubernetes
      - python3-rsa
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - use_kubernetes
    - ansible_distribution_major_version | int >= 9
- name: Installing openshift via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - openshift<=0.13.2
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
- name: Installing pyhelm via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pyhelm<=2.14.5
    extra_args: '{{ pip_extra_args }} --no-build-isolation --no-use-pep517'
  when:
    - use_kubernetes
- name: Installing openssl
  become: true
  ansible.builtin.yum:
    name:
      - openssl
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - nginx_deploy
- name: Installing cryptography via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name: cryptography<=41.0.7
    extra_args: '{{ pip_extra_args }}'
  when:
    - nginx_deploy
    - ansible_distribution_major_version | int <= 8
- name: Installing python3-cryptography
  become: true
  ansible.builtin.yum:
    name:
      - python3-cryptography
    update_cache: true
    use_backend: '{{ yum_use_backend }}'
  when:
    - nginx_deploy
    - ansible_distribution_major_version | int >= 9
