---
- name: Starting TestAPI
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: testapi
    image: '{{ testapi_docker_image }}:{{ testapi_docker_tag }}'
    image_comparison: '{{ docker_image_comparison }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ testapi_port }}:8000'
    env:
      base_url: '{{ testapi_base_url }}'
      mongodb_url: '{{ mongo_url }}'
      auth: 'false'
    container_default_behavior: no_defaults
  notify:
    - Waiting TestAPI
  when:
    - testapi_deploy
    - not use_podman
- name: Starting TestAPI
  become: "{{ ansible_connection is defined }}"
  containers.podman.podman_container:
    name: testapi
    image: '{{ testapi_docker_image }}:{{ testapi_docker_tag }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ testapi_port }}:8000'
    env:
      base_url: '{{ testapi_base_url }}'
      mongodb_url: '{{ mongo_url }}'
      auth: 'false'
  notify:
    - Waiting TestAPI
  when:
    - testapi_deploy
    - use_podman
- name: Flushing handlers
  ansible.builtin.meta: flush_handlers
- name: Checking if pod is already registered
  ansible.builtin.uri:
    url: '{{ testapi_url }}/pods/{{ project }}'
    status_code:
      - 200
      - 404
  register: http_response
  when:
    - testapi_deploy or testapi_configure
- name: Registering the pod
  ansible.builtin.uri:
    url: '{{ testapi_url }}/pods'
    method: POST
    body: {"name":"{{ project }}"}
    status_code: 200
    body_format: json
  when:
    - testapi_deploy or testapi_configure
    - http_response.status != 200
- name: Checking if project is already registered
  ansible.builtin.uri:
    url: '{{ testapi_url }}/projects/{{ item.db_project | default(db_project) }}'
    status_code:
      - 200
      - 404
  register: http_response
  loop: "{{ suites }}"
  when:
    - testapi_deploy or testapi_configure
- name: Registering the project
  ansible.builtin.uri:
    url: '{{ testapi_url }}/projects'
    method: POST
    body: {"name":"{{ item.item.db_project | default(db_project) }}"}
    status_code:
      - 200
      - 403
    body_format: json
  with_items:
    - '{{ http_response.results }}'
  when:
    - testapi_deploy or testapi_configure
    - item.status != 200
- name: Checking if testcase is already registered
  ansible.builtin.uri:
    url: "{{ testapi_url }}/projects/{{
      item.0.db_project |default(db_project) }}/cases/{{ item.1 }}"
    status_code:
      - 200
      - 404
  with_subelements:
    - '{{ suites }}'
    - 'tests'
  register: http_response
  when:
    - testapi_deploy or testapi_configure
- name: Registering the testcases
  ansible.builtin.uri:
    url: "{{ testapi_url }}/projects/{{
      item.item.0.db_project |default(db_project) }}/cases"
    method: POST
    body: {"name":"{{ item.item.1 }}"}
    status_code: 200
    body_format: json
  with_items:
    - '{{ http_response.results }}'
  loop_control:
    label: "{{ item.item.1 }}"
  when:
    - testapi_deploy or testapi_configure
    - item.status != 200
