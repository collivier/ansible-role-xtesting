---
- name: Starting Minio
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: minio
    image: '{{ minio_docker_image }}:{{ minio_docker_tag }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    command: server /data --console-address :{{ minio_console_port }}
    env:
      MINIO_ACCESS_KEY: '{{ aws_access_key_id }}'
      MINIO_SECRET_KEY: '{{ aws_secret_access_key }}'
    published_ports:
      - '{{ minio_port }}:9000'
      - '{{ minio_console_port }}:9001'
    volumes:
      - '{{ prefix }}/minio:/data'
    container_default_behavior: no_defaults
  when:
    - minio_deploy
    - not use_kubernetes
- name: Adding Minio chart repository
  kubernetes.core.helm_repository:
    name: minio
    repo_url: https://helm.min.io/
  when:
    - minio_deploy
    - use_kubernetes
- name: Installing Minio helm chart
  kubernetes.core.helm:
    name: minio
    chart_ref: minio/minio
    chart_version: 8.0.10
    release_namespace: default
    values:
      accessKey: '{{ aws_access_key_id }}'
      secretKey: '{{ aws_secret_access_key }}'
      service:
        type: NodePort
        nodePort: '{{ minio_port }}'
      resources:
    wait: true
  when:
    - minio_deploy
    - use_kubernetes
- name: Starting S3www
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: s3www
    image: ollivier/xtesting-s3www
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ s3www_port }}:8080'
    env:
      ENDPOINT: 'http://{{ ipaddress }}:{{ minio_port }}'
      ACCESSKEY: '{{ aws_access_key_id }}'
      SECRETKEY: '{{ aws_secret_access_key }}'
      BUCKET: '{{ bucket }}'
    container_default_behavior: no_defaults
  when:
    - minio_deploy
- name: Setting s3 endpoint url if Minio
  set_fact:
    s3_endpoint_url: 'http://{{ ipaddress }}:{{ minio_port }}'
  when:
    - publish_to_s3
    - minio_deploy
- name: Setting http dst url if Minio
  set_fact:
    http_dst_url: 'http://{{ external_ipaddress }}:{{ s3www_port }}'
  when:
    - publish_to_s3
    - minio_deploy
