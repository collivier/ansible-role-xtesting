---
- name: Starting Kibana
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: kibana
    image: '{{ kibana_docker_image }}:{{ kibana_docker_tag }}'
    image_comparison: '{{ docker_image_comparison }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    env:
      ELASTICSEARCH_HOSTS: '{{ elasticsearch_url }}'
    published_ports:
      - '{{ kibana_port }}:5601'
    container_default_behavior: no_defaults
  notify:
    - Waiting Kibana
  when:
    - kibana_deploy
    - not use_kubernetes
    - not use_podman
- name: Starting Kibana
  become: "{{ ansible_connection is defined }}"
  containers.podman.podman_container:
    name: kibana
    image: '{{ kibana_docker_image }}:{{ kibana_docker_tag }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    cgroups: '{{ podman_cgroups }}'
    network: '{{ podman_network }}'
    env:
      ELASTICSEARCH_HOSTS: '{{ elasticsearch_url }}'
    published_ports:
      - '{{ kibana_port }}:5601'
  notify:
    - Waiting Kibana
  when:
    - kibana_deploy
    - not use_kubernetes
    - use_podman
- name: Adding Kibana chart repository
  kubernetes.core.helm_repository:
    name: elastic
    repo_url: https://helm.elastic.co
  when:
    - kibana_deploy
    - use_kubernetes
- name: Installing Kibana helm chart
  kubernetes.core.helm:
    name: kibana
    chart_ref: elastic/kibana
    chart_version: '{{ kibana_chart_version }}'
    release_namespace: default
    update_repo_cache: '{{ helm_update_repo_cache }}'
    values:
      image: '{{ kibana_k8s_image }}'
      imageTag: '{{ kibana_k8s_tag }}'
      elasticsearchHosts: '{{ elasticsearch_url }}'
      service:
        type: NodePort
        nodePort: '{{ kibana_port }}'
    wait: true
    wait_timeout: 600s
  when:
    - kibana_deploy
    - use_kubernetes
