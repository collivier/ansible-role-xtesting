---
- name: Creating nginx in {{ prefix }}
  become: true
  ansible.builtin.file:
    path: '{{ prefix }}/nginx'
    state: directory
    mode: '0755'
  when:
    - nginx_deploy
- name: Creating nginx/default.conf in {{ prefix }}
  become: true
  ansible.builtin.template:
    src: default.conf.j2
    dest: '{{ prefix }}/nginx/default.conf'
    mode: '0644'
  when:
    - nginx_deploy
- name: Checking if {{ ssl_certificate }} exists
  become: true
  stat:
    path: '{{ ssl_certificate }}'
  register: certificate
- name: Copying {{ ssl_certificate }} in {{ prefix }}/nginx
  become: true
  ansible.builtin.copy:
    src: '{{ ssl_certificate }}'
    dest: '{{ prefix }}/nginx/xtesting.cert'
    force: true
    mode: '0644'
    remote_src: yes
  when:
    - nginx_deploy
    - certificate.stat.exists
- name: Checking if {{ ssl_certificate_key }} exists
  become: true
  stat:
    path: '{{ ssl_certificate_key }}'
  register: certificate_key
- name: Copying {{ ssl_certificate_key }} in {{ prefix }}/nginx
  become: true
  ansible.builtin.copy:
    src: '{{ ssl_certificate_key }}'
    dest: '{{ prefix }}/nginx/xtesting.key'
    force: true
    mode: '0600'
    remote_src: yes
  when:
    - nginx_deploy
    - certificate_key.stat.exists
- name: Creating private key (RSA, 4096 bits)
  become: true
  community.crypto.openssl_privatekey:
    path: '{{ prefix }}/nginx/xtesting.key'
  when:
    - nginx_deploy
    - not certificate_key.stat.exists
- name: Creating simple self-signed certificate
  become: true
  community.crypto.x509_certificate:
    path: '{{ prefix }}/nginx/xtesting.cert'
    privatekey_path: '{{ prefix }}/nginx/xtesting.key'
    provider: selfsigned
  when:
    - nginx_deploy
    - not certificate_key.stat.exists
- name: Starting NGINX
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: nginx
    image: '{{ nginx_docker_image }}:{{ nginx_docker_tag }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ nginx_port }}:443'
    volumes:
      - '{{ prefix }}/nginx/default.conf:/etc/nginx/conf.d/default.conf'
      - '{{ prefix }}/nginx/xtesting.cert:/xtesting.cert'
      - '{{ prefix }}/nginx/xtesting.key:/xtesting.key'
    container_default_behavior: no_defaults
  notify:
    - Waiting NGINX
  when:
    - nginx_deploy
    - not use_podman
- name: Starting NGINX
  become: "{{ ansible_connection is defined }}"
  containers.podman.podman_container:
    name: nginx
    image: '{{ nginx_docker_image }}:{{ nginx_docker_tag }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    privileged: true
    published_ports:
      - '{{ nginx_port }}:443'
    volumes:
      - '{{ prefix }}/nginx/default.conf:/etc/nginx/conf.d/default.conf'
      - '{{ prefix }}/nginx/xtesting.crt:/xtesting.crt'
      - '{{ prefix }}/nginx/xtesting.key:/xtesting.key'
  notify:
    - Waiting NGINX
  when:
    - nginx_deploy
    - use_podman
