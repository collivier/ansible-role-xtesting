---
- name: Creating {{ prefix }}/mongodb
  become: true
  file:
    path: '{{ prefix }}/mongodb'
    state: directory
  when:
    - mongo_deploy
    - not use_kubernetes
- name: Starting MongoDB
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: mongo
    image: '{{ mongo_docker_image }}:{{ mongo_docker_tag }}'
    image_comparison: '{{ docker_image_comparison }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ mongo_port }}:27017'
    volumes:
      - '{{ prefix }}/mongodb:/data/db'
    env:
      MONGO_INITDB_ROOT_USERNAME: '{{ mongo_root_username }}'
      MONGO_INITDB_ROOT_PASSWORD: '{{ mongo_root_password }}'
    container_default_behavior: no_defaults
  notify:
    - Waiting MongoDB
  when:
    - mongo_deploy
    - not use_kubernetes
    - not use_podman
- name: Starting MongoDB
  become: "{{ ansible_connection is defined }}"
  containers.podman.podman_container:
    name: mongo
    image: '{{ mongo_docker_image }}:{{ mongo_docker_tag }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ mongo_port }}:27017'
    volumes:
      - '{{ prefix }}/mongodb:/data/db'
    env:
      MONGO_INITDB_ROOT_USERNAME: '{{ mongo_root_username }}'
      MONGO_INITDB_ROOT_PASSWORD: '{{ mongo_root_password }}'
  notify:
    - Waiting MongoDB
  when:
    - mongo_deploy
    - not use_kubernetes
    - use_podman
- name: Adding MongoDB chart repository
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
  when:
    - mongo_deploy
    - use_kubernetes
- name: Installing MongoDB helm chart
  kubernetes.core.helm:
    name: mongo
    chart_ref: bitnami/mongodb
    chart_version: '{{ mongo_chart_version }}'
    release_namespace: default
    update_repo_cache: '{{ helm_update_repo_cache }}'
    values:
      architecture: standalone
      image:
        repository: '{{ mongo_k8s_image }}'
        tag: '{{ mongo_k8s_tag }}'
      auth:
        enabled: true
        rootUser: '{{ mongo_root_username }}'
        rootPassword: '{{ mongo_root_password }}'
      service:
        type: NodePort
        externalTrafficPolicy: Cluster
        nodePorts:
          mongodb: '{{ mongo_port }}'
    wait: true
  notify:
    - Waiting MongoDB
  when:
    - mongo_deploy
    - use_kubernetes
- name: Flushing handlers
  ansible.builtin.meta: flush_handlers
