---
- name: Checking Python version
  ansible.builtin.fail:
    msg: Python 2 support was dropped
  when:
    - ansible_python.version.major==2
- name: Checking Debian version
  ansible.builtin.fail:
    msg: Only Debian 11 and newer are supported
  when:
    - ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int > 0 and
        ansible_distribution_major_version|int < 11
- name: Checking Ubuntu version
  ansible.builtin.fail:
    msg: Only Ubuntu 20 and newer are supported
  when:
    - ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int < 20
- name: Checking Ubuntu podman support
  ansible.builtin.fail:
    msg: Only Ubuntu 22 and newer support podman
  when:
    - ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int < 22
    - use_podman
- name: Setting break-system-packages in pip args
  ansible.builtin.set_fact:
    pip_extra_args: "{{ ' '.join((pip_extra_args, '--break-system-packages')) }}"
  when:
    - not (ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int > 0 and
        ansible_distribution_major_version|int <= 11)
    - not (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int < 24)
- name: Installing python3-apt
  become: true
  ansible.builtin.shell:
    cmd: apt-get update && apt-get install python3-apt -y
  tags:
    - skip_ansible_lint
  register: apt_res
  retries: 5
  until: apt_res is success
  changed_when: true
- name: Installing iproute2 and lsb-release
  become: true
  ansible.builtin.apt:
    name:
      - iproute2
      - lsb-release
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - not lookup('env', 'VIRTUAL_ENV')
- name: Collecting facts
  ansible.builtin.setup:
- name: Installing python3-pip
  become: true
  ansible.builtin.apt:
    name: python3-pip
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - not lookup('env', 'VIRTUAL_ENV')
- name: Gathering the package facts
  ansible.builtin.package_facts:
    manager: auto
- name: Installing docker.io
  become: true
  ansible.builtin.apt:
    name: docker.io
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - ansible_lsb.id!='Raspbian'
    - not 'docker-ce' in ansible_facts.packages
    - not (use_podman and not kubernetes_deploy)
- name: Installing podman
  become: true
  ansible.builtin.apt:
    name: podman
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_podman
- name: Installing fuse-overlayfs
  become: true
  ansible.builtin.apt:
    name: fuse-overlayfs
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Checking /usr/share/containers/storage.conf exists
  ansible.builtin.stat:
    path: '/usr/share/containers/storage.conf'
  register: stat_result
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Patching /usr/share/containers/storage.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/usr/share/containers/storage.conf'
    regexp: '^.*mount_program.*=.*$'
    line: 'mount_program = "/usr/bin/fuse-overlayfs"'
  when:
    - use_podman
    - ansible_module_running_in_container
    - stat_result.stat.exists
- name: Patching /usr/share/containers/containers.conf
  become: true
  ansible.builtin.lineinfile:
    path: '/usr/share/containers/containers.conf'
    regexp: '^.*remote.*=.*$'
    line: 'remote = true'
  when:
    - use_podman
    - ansible_module_running_in_container
- name: Installing curl
  become: true
  ansible.builtin.apt:
    name: curl
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - ansible_lsb.id == ' Raspbian' or (
        ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int > 0 and
        ansible_distribution_major_version|int < 10)
    - not (ansible_distribution == 'Debian' and
        ansible_distribution_version == 'testing')
    - not 'docker-ce' in ansible_facts.packages
- name: Installing docker
  become: true
  ansible.builtin.shell: curl -sSL https://get.docker.com | sh
  when:
    - ansible_lsb.id == ' Raspbian' or (
        ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int > 0 and
        ansible_distribution_major_version|int < 10)
    - not (ansible_distribution == 'Debian' and
        ansible_distribution_version == 'testing')
    - not 'docker-ce' in ansible_facts.packages
    - not (use_podman and not kubernetes_deploy)
- name: Installing python3-docker
  become: true
  ansible.builtin.apt:
    name: python3-docker
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
- name: Installing python3-pbr, python3-fasteners, python3-multi-key-dict,
    python3-six, python3-stevedore, python3-yaml and python3-jinja2
  become: true
  ansible.builtin.apt:
    name:
      - python3-pbr
      - python3-fasteners
      - python3-multi-key-dict
      - python3-six
      - python3-stevedore
      - python3-yaml
      - python3-jinja2
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - jenkins_deploy or jenkins_configure or jenkins_create_jobs
- name: Installing python-jenkins and jenkins-job-builder via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - python-jenkins<=1.8.2
      - jenkins-job-builder<=6.4.2
    extra_args: '{{ pip_extra_args }}'
  when:
    - jenkins_deploy or jenkins_configure or jenkins_create_jobs
    - (ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int == 11) or
      (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int == 20) or
      (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int == 24)
- name: Installing jenkins-job-builder
  become: true
  ansible.builtin.apt:
    name:
      - jenkins-job-builder
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - jenkins_deploy or jenkins_configure
    - not (ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int == 11)
    - not (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int == 20)
    - not (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int == 24)
- name: Installing python3-jmespath
  become: true
  ansible.builtin.apt:
    name: python3-jmespath
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - gitlab_deploy or gitlab_configure
- name: Installing git
  become: true
  ansible.builtin.apt:
    name: git
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - gitlab_create_jobs
- name: Installing python3-psycopg2
  become: true
  ansible.builtin.apt:
    name: python3-psycopg2
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - postgres_deploy or cachet_configure
- name: Installing python3-passlib
  become: true
  ansible.builtin.apt:
    name: python3-passlib
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - cachet_deploy or cachet_configure
- name: Installing python3-influxdb
  become: true
  ansible.builtin.apt:
    name: python3-influxdb
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - influxdb_deploy
- name: Installing curl
  become: true
  ansible.builtin.apt:
    name:
      - curl
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - kubernetes_deploy
- name: Installing kind
  become: true
  ansible.builtin.uri:
    url: https://kind.sigs.k8s.io/dl/v0.27.0/kind-linux-amd64
    dest: /usr/local/bin/kind
    mode: '0755'
    status_code:
      - 200
      - 304
  when:
    - kubernetes_deploy
- name: Installing cachetools, durationpy, oauthlib,
    requests-oauthlib, pyasn1, pyasn1-modules, rsa,
    google-auth, python-dateutil and kubernetes via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - cachetools<=5.5.2
      - durationpy<=0.9
      - google-auth<2.38.0
      - kubernetes<=32.0.1
      - oauthlib<=3.2.2
      - pyasn1<=0.6.1
      - pyasn1-modules<=0.4.1
      - python-dateutil<=2.9.0.post0
      - requests-oauthlib<=2.0.0
      - rsa<=4.9
  when:
    - use_kubernetes
    - ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int <= 20
- name: Installing python3-kubernetes
  become: true
  ansible.builtin.apt:
    name:
      - python3-kubernetes
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_kubernetes
    - not (ansible_distribution == 'Ubuntu' and
        ansible_distribution_major_version|int <= 20)
- name: Installing python3-certifi, python3-cachetools, python3-oauthlib and
    python3-requests-oauthlib
  become: true
  ansible.builtin.apt:
    name:
      - python3-certifi
      - python3-cachetools
      - python3-oauthlib
      - python3-requests-oauthlib
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_kubernetes
- name: Installing python3-google-auth
  become: true
  ansible.builtin.apt:
    name:
      - python3-google-auth
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_kubernetes
- name: Installing pyhelm and openshift via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - openshift<=0.13.2
      - pyhelm<=2.14.5
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - not (ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int == 0)
- name: Installing python3-openshift
  become: true
  ansible.builtin.apt:
    name:
      - python3-openshift
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - use_kubernetes
    - ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int == 0
- name: Installing pyhelm via pip
  become: "{{ not lookup('env', 'VIRTUAL_ENV') }}"
  ansible.builtin.pip:
    name:
      - pyhelm<=2.14.5
    extra_args: '{{ pip_extra_args }}'
  when:
    - use_kubernetes
    - ansible_distribution == 'Debian' and
        ansible_distribution_major_version|int == 0
- name: Installing python3-cryptography and openssl
  become: true
  ansible.builtin.apt:
    name:
      - python3-cryptography
      - openssl
    update_cache: true
    cache_valid_time: 3600
  register: apt_res
  retries: 5
  until: apt_res is success
  when:
    - nginx_deploy
