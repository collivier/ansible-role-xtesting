---
- name: Creating {{ prefix }}/postgres
  become: true
  file:
    path: '{{ prefix }}/postgres'
    state: directory
  when:
    - postgres_deploy
    - not use_kubernetes
- name: Starting PostgreSQL
  become: "{{ ansible_connection is defined }}"
  community.docker.docker_container:
    name: postgres
    image: '{{ postgres_docker_image }}:{{ postgres_docker_tag }}'
    image_comparison: '{{ docker_image_comparison }}'
    pull: '{{ docker_pull }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    published_ports:
      - '{{ postgres_port }}:5432'
    volumes:
      - '{{ prefix }}/postgres:/var/lib/postgresql/data'
    env:
      POSTGRES_USER: '{{ postgres_username }}'
      POSTGRES_PASSWORD: '{{ postgres_password }}'
      POSTGRES_DB: '{{ postgres_database }}'
    container_default_behavior: no_defaults
  notify:
    - Waiting PostgreSQL
  when:
    - postgres_deploy
    - not use_kubernetes
    - not use_podman
- name: Starting PostgreSQL
  become: "{{ ansible_connection is defined }}"
  containers.podman.podman_container:
    name: postgres
    image: '{{ postgres_docker_image }}:{{ postgres_docker_tag }}'
    recreate: '{{ docker_recreate }}'
    restart_policy: '{{ docker_restart_policy }}'
    cgroups: '{{ podman_cgroups }}'
    published_ports:
      - '{{ postgres_port }}:5432'
    volumes:
      - '{{ prefix }}/postgres:/var/lib/postgresql/data'
    env:
      POSTGRES_USER: '{{ postgres_username }}'
      POSTGRES_PASSWORD: '{{ postgres_password }}'
      POSTGRES_DB: '{{ postgres_database }}'
  notify:
    - Waiting PostgreSQL
  when:
    - postgres_deploy
    - not use_kubernetes
    - use_podman
- name: Adding PostgreSQL chart repository
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: https://charts.bitnami.com/bitnami
  when:
    - postgres_deploy
    - use_kubernetes
- name: Installing PostgreSQL helm chart
  kubernetes.core.helm:
    name: postgres
    chart_ref: bitnami/postgresql
    chart_version: '{{ postgres_chart_version }}'
    release_namespace: default
    update_repo_cache: '{{ helm_update_repo_cache }}'
    values:
      architecture: standalone
      image:
        repository: '{{ postgres_k8s_image }}'
        tag: '{{ postgres_k8s_tag }}'
      auth:
        username: '{{  postgres_username }}'
        password: '{{  postgres_password }}'
        postgresPassword: '{{ postgres_password }}'
        database: '{{ postgres_database }}'
      primary:
        service:
          externalTrafficPolicy: Cluster
          type: NodePort
          nodePorts:
            postgresql: '{{ postgres_port }}'
    wait: true
  when:
    - postgres_deploy
    - use_kubernetes
- name: Flushing handlers
  ansible.builtin.meta: flush_handlers
